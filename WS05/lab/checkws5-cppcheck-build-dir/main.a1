<?xml version="1.0"?>
<analyzerinfo hash="9571560440419789396">
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\Flight.h" line="24" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="41" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="43" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="50" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="51" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="55" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="56" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="57" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp">
            <location file="D:\Seneca\Seneca\2nd semester\OOP - Introduction to Object Oriented Programming\6\OOP-Workshops-main (1)\OOP-Workshops-main\WS05\lab\main.cpp" line="58" column="40"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp:18:6" call-funcname="displayFlights" call-argnr="1" file="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp" line="38" col="18" call-argexpr="flights" call-argvaluetype="7" call-argvalue="-1"/><function-call call-id="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp:18:6" call-funcname="displayFlights" call-argnr="1" file="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp" line="68" col="18" call-argexpr="flights" call-argvaluetype="7" call-argvalue="-1"/><function-call call-id="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp:18:6" call-funcname="displayFlights" call-argnr="1" file="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp" line="78" col="18" call-argexpr="flights" call-argvaluetype="7" call-argvalue="-1"/><function-call call-id="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp:18:6" call-funcname="displayFlights" call-argnr="1" file="D:/Seneca/Seneca/2nd semester/OOP - Introduction to Object Oriented Programming/6/OOP-Workshops-main (1)/OOP-Workshops-main/WS05/lab/main.cpp" line="84" col="18" call-argexpr="flights" call-argvaluetype="7" call-argvalue="-1"/>  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="displayFlights" lineNumber="18"/>
    <functiondecl functionName="main" lineNumber="26"/>
    <functioncall functionName="Flight"/>
    <functioncall functionName="display"/>
    <functioncall functionName="displayFlights"/>
    <functioncall functionName="operatorbool"/>
    <functioncall functionName="operatorconstchar*"/>
  </FileInfo>
</analyzerinfo>
